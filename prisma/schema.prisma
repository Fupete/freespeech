// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id             String        @id @default(cuid())
  email          String        @unique
  hashedPassword String?
  name           String?
  profileImage   String?
  projects       Project[]
  s3resources    S3Resource[]
  accesstokens   AccessToken[]
}

model AccessToken {
  id        String   @id @default(cuid())
  token     String   @unique @default(cuid())
  user      User     @relation(fields: [userId], references: [id])
  userAgent String?
  userId    String
  createdAt DateTime @default(now())
}

model Project {
  id          String   @id @default(cuid())
  name        String
  description String?
  visibility  String   @default("private")
  thumbnail   String?
  columns     Int      @default(10)
  rows        Int      @default(6)
  user        User     @relation(fields: [userId], references: [id])
  userId      String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  pages       Page[]
}

model Page {
  id        String   @id @default(cuid())
  name      String
  tiles     Tile[]
  project   Project  @relation(fields: [projectId], references: [id])
  projectId String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Tile {
  id                 String   @id @default(cuid())
  x                  Int
  y                  Int
  tapCount           Int      @default(0)
  text               String?  @default("New Tile")
  speakText          String?
  image              String?
  backgroundColor    String?
  textColor          String?
  borderColor        String?
  accented           Boolean  @default(false)
  invisible          Boolean  @default(false)
  navigationPageName String?
  link               String?
  modifier           String?
  page               Page     @relation(fields: [pageId], references: [id])
  pageId             String
  createdAt          DateTime @default(now())
  updatedAt          DateTime @updatedAt
}

model S3Resource {
  id        String   @id @default(cuid())
  name      String
  url       String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user      User     @relation(fields: [userId], references: [id])
  userId    String
}
