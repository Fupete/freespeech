// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id               String      @id @default(cuid())
  email            String      @unique
  name             String
  password         String
  profileImgUrl    String?
  elevenLabsApiKey String?
  emailVerified    Boolean     @default(false)
  UserMedia        UserMedia[]
  createdAt        DateTime    @default(now())
  updatedAt        DateTime    @updatedAt
  Project          Project[]
  TilePage         TilePage[]
}

model UserMedia {
  id        String   @id @default(cuid())
  url       String
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model TilePage {
  id        String   @id @default(cuid())
  name      String
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  isPublic  Boolean  @default(false)
  data      Json
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  Project   Project? @relation(fields: [projectId], references: [id])
  projectId String?
  tiles     Tile[]
}

model Tile {
  id String @id @default(cuid())

  x                Int
  y                Int
  subpageIndex     Int
  text             String
  displayText      String?
  imageUrl         String?
  color            String  @default("white")
  pageNavigationId String?

  page   TilePage @relation(fields: [pageId], references: [id])
  pageId String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Project {
  id          String     @id @default(cuid())
  name        String
  description String?
  imageUrl    String?
  columns     Int        @default(6)
  rows        Int        @default(4)
  user        User       @relation(fields: [userId], references: [id])
  userId      String
  isPublic    Boolean    @default(false)
  pages       TilePage[]
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
}
