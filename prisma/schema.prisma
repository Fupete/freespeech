// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model S3Object {
  id     String  @id @default(cuid())
  user   User?   @relation(fields: [userId], references: [id])
  userId String?

  key      String
  bucket   String
  region   String
  filename String
  mimetype String
  size     Int

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
}

model User {
  id String @id @default(cuid())

  email          String  @unique
  verified       Boolean @default(false)
  hashedPassword String?
  name           String?
  bio            String?
  avatar         String?

  created_at           DateTime              @default(now())
  updated_at           DateTime              @updatedAt
  S3Object             S3Object[]
  verificationRequests VerificationRequest[]
  tiles                Tile[]
  pages                Page[]
  projects             Project[]
}

model VerificationRequest {
  id         String   @id @default(cuid())
  user       User     @relation(fields: [userId], references: [id])
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  userId     String
}

model Tile {
  id String @id @default(cuid())

  x               Int
  y               Int
  text            String
  speakText       String?
  image           String?
  backgroundColor String?
  textColor       String?
  borderColor     String?
  modifier        String?
  link            String?
  navigateTo      String?
  isAccented      Boolean @default(false)
  isPublic        Boolean @default(false)
  user            User    @relation(fields: [userId], references: [id])

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  userId     String
  Page       Page?    @relation(fields: [pageId], references: [id])
  pageId     String?
}

model Page {
  id String @id @default(cuid())

  name     String
  isPublic Boolean @default(false)
  user     User    @relation(fields: [userId], references: [id])
  tiles    Tile[]

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  userId     String
  Project    Project? @relation(fields: [projectId], references: [id])
  projectId  String?
}

model Project {
  id String @id @default(cuid())

  name        String
  description String?
  slug        String
  isPublic    Boolean @default(false)
  image       String?
  columns     Int     @default(10)
  rows        Int     @default(6)
  pages       Page[]
  user        User    @relation(fields: [userId], references: [id])

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  userId     String
}
